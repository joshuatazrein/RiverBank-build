{"version":3,"sources":["index.js"],"names":["mysql","require","resetData","bank","info","index","subtasks","id","title","river","String","Date","getTime","toDateString","settings","repeats","data","localStorage","getItem","JSON","parse","selected","preventSelect","copiedTask","app","deadlines","startdates","err","console","log","loginItem","React","createRef","StatusBar","Component","props","state","searchString","foundTasks","task","idString","i","subtask","length","this","searches","treeSearch","ev","setState","target","value","Object","keys","x","includes","splits","split","frame","current","changeIndex","Number","setTimeout","frames","map","currentTask","slice","place","taskList","subtaskObjects","selectTask","search","bind","goToSearch","searchResults","className","onChange","onKeyDown","key","ref","onClick","newTask","cutTask","copyTask","pasteTask","backup","parent","hideComplete","toggleComplete","Timer","minutes","seconds","val","play","stopwatch","backwards","multiplier","clearInterval","interval","setInterval","end","alert","startTimer","playPause","audioRef","readOnly","padStart","Frame","lists","width","Math","floor","window","innerWidth","$","on","resizeCheck","newIndex","prevState","now","lastDate","date","setDate","getDate","push","endIndex","addEventListener","shownLists","List","subtaskIDs","newSubs","repeat","selectThis","updateRepeats","changeTitle","TaskList","addTask","tasksListed","Task","addTasks","displayOptions","riverTask","startDate","endDate","collapsed","showHide","hasClass","editHeight","heightSpan","offsetHeight","deadline","setMonth","day","splice","findIndex","dataObject","resetRepeats","setItem","stringify","status","complete","important","maybe","changeEndDate","changeStartDate","changeRepeat","save","editBar","focus","toggleImportant","toggleMaybe","deleteThis","optionsButton","startDateSpan","headingClass","hasTimes","startInput","endInput","style","alignContent","toggleCollapse","height","editWidth","type","el","force","undefined","saveType","parents","reverse","parentObject","parentId","find","concat","insertIndex","Login","loginUsername","loginPassword","newUsername","newPassword1","newPassword2","setter","obj","con","createConnection","host","user","password","e","set","placeholder","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.78bd3c49.chunk.js","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport DatePicker from 'react-datepicker';\nimport $ from 'jquery';\nimport './style.css';\nimport { render } from '@testing-library/react';\nimport \"react-datepicker/dist/react-datepicker.css\";\n// import \"./react-datepicker.css\";\nconst fs = require('fs');\nvar mysql = require('mysql');\n\nvar resetData = {\n  bank: \n    {info: {index: 0}, subtasks: [\n      {id:'1', title:'first', subtasks: [], info: {}}\n    ]}, \n  river:\n    {info: {index: 0}, subtasks: [\n      {id:String(new Date().getTime()), title: new Date().toDateString(), subtasks: [], info: {}}\n    ]}, \n  settings: {repeats: {'Mon': [], 'Tue': [], 'Wed': [], 'Thu': [], \n  'Fri': [], 'Sat': [], 'Sun': [], }}\n};\n\ntry {\n  var data = !localStorage.getItem('data') ? resetData :\n    JSON.parse(localStorage.getItem('data'));\n} catch {\n  var data = resetData;\n}\n\nvar deadlines = {};\nvar startdates = {};\n\ntry {\n  var repeats = data.settings.repeats;\n} catch (err) {\n  console.log('error');\n  var data = resetData;\n}\n\nvar selected;\nvar preventSelect;\nvar copiedTask;\nvar width;\nvar prevWidth;\nvar app;\nvar loginItem = React.createRef();\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {hideComplete: '', \n      bank: React.createRef(),\n      river: React.createRef(),\n    };\n  }\n  toggleComplete() {\n    if (this.state.hideComplete == '') {\n      this.setState({hideComplete: 'hideComplete'});\n    } else {\n      this.setState({hideComplete: ''});\n    }\n  }\n  render () {\n    return (\n      <>\n        <StatusBar parent={this} />\n        <div className={'container ' + this.state.hideComplete}>\n          <Frame id='bank' info={data['river'].info} \n            subtasks={data['bank'].subtasks} ref={this.state.bank} />\n          <Frame id='river' info={data['river'].info} \n            subtasks={data['river'].subtasks} ref={this.state.river} />\n        </div>\n      </>\n    )\n  }\n}\n\nclass StatusBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {searchString: '', foundTasks: {}};\n  }\n  treeSearch(task, idString) {\n    let i = 0;\n    for (let subtask of task.subtasks) {\n      if (subtask.title.length > 0) {\n        this.searches[subtask.title] = idString + ' ' + i;\n      }\n      this.treeSearch(subtask, idString + ' ' + i);\n      i ++;\n    }\n  }\n  search(ev) {\n    if (this.state.searchString === '') {\n      this.searches = {};\n      this.treeSearch(data.river, 'river');\n      this.treeSearch(data.bank, 'bank');\n    }\n    this.setState({searchString: ev.target.value});\n    for (let x of Object.keys(this.searches)) {\n      if (!x.includes(this.state.searchString)) {\n        delete this.searches[x];\n      }\n    }\n    console.log(this.searches);\n    this.setState({foundTasks: this.searches});\n  }\n  goToSearch(title) {\n    const splits = title.split(' ');\n    const frame = app.current.state[splits[0]];\n    frame.current.changeIndex(Number(splits[1]));\n    setTimeout(() => {\n      console.log(frame.current.frames.map(x => x.current));\n      let currentTask = frame.current.frames[0];\n      for (let place of splits.slice(2)) {\n        // zoom into places until you find the task\n        currentTask = currentTask.current.taskList.current.\n          subtaskObjects[Number(place)];\n      }\n      console.log(currentTask.current);\n      setTimeout(() => {\n        preventSelect = false;\n        selectTask(currentTask.current, true);\n      }, 50)\n    }, 50)\n    this.setState({searchString: '', foundTasks: {}});\n  }\n  render() {\n    this.search = this.search.bind(this);\n    this.treeSearch = this.treeSearch.bind(this);\n    this.goToSearch = this.goToSearch.bind(this);\n    this.searchResults = React.createRef();\n    return (\n      <div className='statusBar'>\n        <input className='searchBar' onChange={(ev) => this.search(ev)}\n          value={this.state.searchString}\n          onKeyDown={(ev) => {\n            if (ev.key === 'Backspace') {\n              this.setState({searchString: '', foundTasks: {}});\n            }\n          }}></input>\n        <select ref={this.searchResults} onChange={() => {\n          this.goToSearch(this.state.foundTasks[\n            this.searchResults.current.value])\n          }}>\n          <option></option>\n          {Object.keys(this.state.foundTasks).map(x => \n            <option key={x} value={x}>{x}</option>)}\n        </select>\n        <div className='buttonBar'>\n          <button className='button' onClick={newTask}>+</button>\n          <button className='button' onClick={cutTask}>x</button>\n          <button className='button' onClick={copyTask}>c</button>\n          <button className='button' onClick={pasteTask}>v</button>\n          <button className='button' onClick={backup}>backup</button>\n          <button \n            className={'button ' + this.props.parent.state.hideComplete} onClick={() => {\n              this.props.parent.toggleComplete();\n            }}>+√/-√</button>\n          <Timer />\n        </div>\n      </div>\n    )\n  }\n}\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {minutes: 0, seconds: 0, repeats: repeats};\n  }\n  startTimer(val) {\n    this.setState({minutes: this.state.minutes + val, seconds: 0});\n    this.play();\n  }\n  play(stopwatch, backwards) {\n    const multiplier = backwards ? -1 : 1;\n    clearInterval(this.interval);\n    if (stopwatch === 'stopwatch') {\n      this.interval = setInterval(() => {\n        if (this.state.seconds === 60) {\n          this.setState({minutes: (this.state.minutes + 1) * multiplier, \n            seconds: 0});\n        } else {\n          this.setState({seconds: this.state.seconds + 1});\n        }\n      }, 1000);\n    } else {\n      this.interval = setInterval(() => {\n        if (this.state.seconds === 0) {\n          if (this.state.minutes === 0) {\n            this.end();\n            this.play('stopwatch', true);\n          }\n          this.setState({minutes: (this.state.minutes - 1) * multiplier, \n            seconds: 59});\n        } else {\n          this.setState({seconds: this.state.seconds - 1});\n        }\n      }, 1000);\n    }\n  }\n  end() {\n    alert('timer complete');\n  }\n  playPause() {\n    clearInterval(this.interval);\n    this.setState({minutes: 0, seconds: 0});\n  }\n  render () {\n    this.startTimer = this.startTimer.bind(this);\n    this.playPause = this.playPause.bind(this);\n    this.play = this.play.bind(this);\n    this.audioRef = React.createRef();\n    return (\n      <div>\n        <div className='buttonBar'>\n          <button className='button' onClick={() => this.startTimer(50)}>50</button>\n          <button className='button' onClick={() => this.startTimer(25)}>25</button>\n          <button className='button' onClick={() => this.startTimer(10)}>10</button>\n          <button className='button' onClick={() => this.startTimer(5)}>5</button>\n          <button className='button' onClick={() => {\n            this.setState({minutes: 0, seconds: 1});\n            this.play();\n          }}>:5</button>\n          <button className='button' onClick={() => this.playPause()}>&#9632;</button>\n        </div>\n        <input className='timerBar' readOnly={true}\n          value={this.state.minutes + ':' + \n          String(this.state.seconds).padStart(2, '0')}></input>\n      </div>\n    )\n  }\n}\n\nclass Frame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {lists: props.subtasks, info: props.info,\n      width: Math.floor(window.innerWidth / 200)};\n    $(window).on('resize', this.resizeCheck);\n    if (props.id === 'river') {\n      this.state.deadlines = deadlines;\n      this.state.startdates = startdates;\n      this.state.repeats = repeats;\n    }\n  }\n  changeIndex(val) {\n    let newIndex = this.state.info.index + val\n    if (newIndex < 0) newIndex = 0\n    this.setState(prevState => ({\n      info: {...prevState.info, index: newIndex}\n    }));\n  }\n  render() {\n    const now = new Date();\n    let i = 0;\n    var lastDate = new Date(\n      this.state.lists[this.state.lists.length - 1].title\n    );\n    while (this.state.lists.length < this.state.info.index + 7) {\n      i ++;\n      if (this.props.id === 'bank') {\n        var title = '';\n      } else if (this.props.id === 'river') {\n        const date = new Date(lastDate.getTime());\n        date.setDate(lastDate.getDate() + i);\n        var title = date.toDateString();\n      }\n      this.state.lists.push({id: String(now.getTime() + i), \n        title: title, subtasks: [], info: {}});\n    }\n    function resizeCheck() {\n      // TODO: debug \"this\" in this function\n      const width = Math.floor(window.innerWidth / 200);\n      if (width != this.state.width) {\n        this.setState({width: width});\n      }\n    }\n    let endIndex = this.state.info.index + this.state.width;\n    this.changeIndex = this.changeIndex.bind(this);\n    resizeCheck = resizeCheck.bind(this);\n    this.frames = [];\n    // $(window).off('resize', () => resizeCheck);\n    window.addEventListener('resize', resizeCheck);\n    const shownLists = \n      this.state.lists.slice(this.state.info.index, endIndex);\n    const div = (\n      <div id={this.props.id} className='frame'>\n        <button className='changeButton'\n          onClick={() => this.changeIndex(this.state.width * -1)}>&lt;</button>\n        {shownLists.map(x => {\n          this.frames.push(React.createRef());\n          if (this.props.id === 'river') {\n            // render state correctly in original lists\n            return (\n              <List key={x.id} id={x.id} title={x.title}\n                subtasks={x.subtasks} parent={this} \n                deadlines={this.state.deadlines[x.title]} \n                startdates={this.state.startdates[x.title]} \n                repeats={this.state.repeats[x.title.slice(0, 3)]}\n                ref={this.frames[this.frames.length - 1]} />\n            )\n          } else {\n            return (\n              <List key={x.id} id={x.id} title={x.title}\n                subtasks={x.subtasks} parent={this} />\n            )\n          }\n        })}\n        <button className='changeButton' \n          onClick={() => this.changeIndex(this.state.width)}>&gt;</button>\n      </div>\n    )\n    return div;\n  }\n}\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.taskList = React.createRef();\n    this.state = {subtasks: props.subtasks, title: props.title,\n      info: {}};\n  }\n  changeTitle(ev) {\n    this.setState({title: ev.target.value})\n  }\n  updateRepeats() {\n    const subtaskIDs = this.state.subtasks.map(x => x.id);\n    const newSubs = this.state.subtasks;\n    console.log(subtaskIDs);\n    if (this.props.parent.props.id === 'river') {\n      console.log('river');\n      for (let repeat of repeats[this.props.title.slice(0, 3)]) {\n        if (!subtaskIDs.includes(repeat.id)) {\n          newSubs.push(repeat);\n        }\n      }\n    }\n    console.log(newSubs);\n    if (Object.keys(newSubs).length != \n      Object.keys(this.state.subtasks).length) {\n      this.setState({subtasks: newSubs});\n    }\n  }\n  render() {\n    function selectThis() {\n      selectTask(this);\n    }\n    this.updateRepeats = this.updateRepeats.bind(this);\n    this.updateRepeats();\n    selectThis = selectThis.bind(this);\n    this.changeTitle = this.changeTitle.bind(this);\n    return (\n      <div className='list' onClick={selectThis}>\n        {this.props.parent.props.id === 'bank' ?\n          <input className='listInput' value={this.state.title} \n          onChange={this.changeTitle}></input> :\n          <input readOnly className='listInput listTitle'\n            value={this.state.title}></input>\n        }\n        {this.props.parent.props.id === 'river' && \n        this.props.deadlines &&\n        <ul>\n          {Object.keys(this.props.deadlines).map(x => {\n            return <li \n              className='deadline' key={String(x)}>\n              {this.props.deadlines[x]}</li>;\n          })}\n        </ul>}\n        {this.props.parent.props.id === 'river' && \n        this.props.startdates &&\n        <ul>\n          {Object.keys(this.props.startdates).map(x => {\n            return <li \n              className='startdate' key={String(x)}>\n              {this.props.startdates[x]}</li>;\n          })}\n        </ul>}\n        {<TaskList ref={this.taskList} subtasks={this.state.subtasks} \n          parent={this} />}\n      </div>\n    )\n  }\n}\n\nclass TaskList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {addTask: this.addTask};\n  }\n  render() {\n    this.subtaskObjects = [];\n    const tasksListed = this.props.subtasks.map(x => {\n      this.subtaskObjects.push(React.createRef());\n      const task = (\n        <Task \n          key={x.id}\n          id={x.id}\n          info={x.info}\n          title={x.title}\n          subtasks={x.subtasks}\n          parent={this.props.parent}\n          ref={this.subtaskObjects[this.subtaskObjects.length - 1]}\n        />\n      )\n      return task});\n    return (\n      <ul className='listContent'>\n        {this.props.addTasks && this.props.addTasks}\n        {tasksListed}\n      </ul>\n    )\n  }\n}\n\nclass Task extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      info: props.info, title: props.title, \n      subtasks: props.subtasks, parent: props.parent, \n      id: props.id, displayOptions: 'hide', riverTask: false,\n      this: this\n    };\n    if (!this.state.info.startDate) this.state.info.startDate = '';\n    if (!this.state.info.endDate) this.state.info.endDate = '';\n    if (!this.state.info.collapsed) this.state.info.collapsed = '';\n    let parent = props.parent;\n    while (parent.props.parent) {\n      parent = parent.props.parent;\n    }\n    if (parent.props.id === 'river') {\n      this.state.riverTask = true;\n      this.state.repeats = {\n        'Mon': repeats['Mon'].includes(this.state.title),\n        'Tue': repeats['Tue'].includes(this.state.title),\n        'Wed': repeats['Wed'].includes(this.state.title),\n        'Thu': repeats['Thu'].includes(this.state.title),\n        'Fri': repeats['Fri'].includes(this.state.title),\n        'Sat': repeats['Sat'].includes(this.state.title),\n        'Sun': repeats['Sun'].includes(this.state.title),\n      }\n    }\n  }\n  displayOptions(ev, showHide) {\n    if ($(ev.target).hasClass('options') || \n      $(ev.target).parent().hasClass('options')) {\n      return\n    }\n    if (showHide === 'hide' || this.state.displayOptions === 'show') {\n      this.setState({displayOptions: 'hide'});\n    } else if (showHide == 'show' || this.state.displayOptions === 'hide') {\n      this.setState({displayOptions: 'show'});\n    }\n  }\n  changeTitle(ev) { \n    this.setState({title: ev.target.value, editHeight: \n    'calc(' + String(this.heightSpan.current.offsetHeight) + 'px + 0.25em)'});\n  }\n  changeStartDate(ev) { \n    if (this.state.info.startDate.includes('-')) {\n      // delete deadline string if no longer there\n      const deadline = this.state.info.startDate.split('-');\n      const now = new Date();\n      now.setMonth(Number(deadline[0]) - 1);\n      now.setDate(Number(deadline[1]));\n      if (startdates[now.toDateString()] && \n        startdates[now.toDateString()][this.props.id]) {\n        delete startdates[now.toDateString()][this.props.id];\n      }\n    }\n    if (ev === 'init') {\n      ev = {target: {value: this.state.info.startDate}};\n    } else if (ev === 'destroy') {\n      let parent = this.props.parent;\n      while (parent.props.parent) {\n        parent = parent.props.parent;\n      }\n      parent.setState({startdates: startdates});\n      return;\n    } else {\n      this.setState(prevState => ({\n        info: {...prevState.info, startDate: ev.target.value}})); \n    }\n    console.log(ev);\n    if (ev.target.value.includes('-')) {\n      // process deadline string\n      const deadline = ev.target.value.split('-');\n      const now = new Date();\n      now.setMonth(Number(deadline[0]) - 1);\n      now.setDate(Number(deadline[1]));\n      if (!startdates[now.toDateString()]) {\n        startdates[now.toDateString()] = {};\n      }\n      startdates[now.toDateString()][this.props.id] = this.state.title;\n      let parent = this.props.parent;\n      while (parent.props.parent) {\n        parent = parent.props.parent;\n      }\n      parent.setState({startdates: startdates});\n    }\n  }\n  changeEndDate(ev) { \n    if (this.state.info.endDate.includes('-')) {\n      // delete deadline string if no longer there\n      const deadline = this.state.info.endDate.split('-');\n      const now = new Date();\n      now.setMonth(Number(deadline[0]) - 1);\n      now.setDate(Number(deadline[1]));\n      if (deadlines[now.toDateString()] && \n        deadlines[now.toDateString()][this.props.id]) {\n        delete deadlines[now.toDateString()][this.props.id];\n      }\n    }\n    if (ev === 'init') {\n      ev = {target: {value: this.state.info.endDate}};\n    } else if (ev === 'destroy') {\n      ev = {target: {value: ' '}};\n    } else {\n      this.setState(prevState => ({\n        info: {...prevState.info, endDate: ev.target.value}})); \n    }\n    if (ev.target.value.includes('-')) {\n      // process deadline string\n      const deadline = ev.target.value.split('-');\n      const now = new Date();\n      now.setMonth(Number(deadline[0]) - 1);\n      now.setDate(Number(deadline[1]));\n      if (!deadlines[now.toDateString()]) {\n        deadlines[now.toDateString()] = {};\n      }\n      deadlines[now.toDateString()][this.props.id] = this.state.title;\n      let parent = this.props.parent;\n      while (parent.props.parent) {\n        parent = parent.props.parent;\n      }\n      parent.setState({deadlines: deadlines});\n    }\n  }\n  changeRepeat(day) {\n    if (repeats[day].map(x => x.id).includes(this.props.id)) {\n      repeats[day].splice(repeats[day].findIndex(x => \n        x.id == this.props.id), 1);\n    } else {\n      const dataObject = {title: this.state.title, id: this.props.id, \n        subtasks: this.state.subtasks, info: this.state.info};\n      repeats[day].push(dataObject);\n      let parent = this.props.parent;\n      while (parent.props.parent) {\n        parent = parent.props.parent;\n      }\n      parent.setState({repeats: repeats});\n    }\n    const subtasks = this.state.parent.state.subtasks;\n    const currentTask = subtasks.findIndex(x => {\n      return x.id === this.state.id;\n    });\n    subtasks.splice(currentTask, 1);\n    this.resetRepeats();\n  }\n  resetRepeats() {\n    this.setState({repeats: {\n      'Mon': repeats['Mon'].map(x => x.id).includes(this.props.id),\n      'Tue': repeats['Tue'].map(x => x.id).includes(this.props.id),\n      'Wed': repeats['Wed'].map(x => x.id).includes(this.props.id),\n      'Thu': repeats['Thu'].map(x => x.id).includes(this.props.id),\n      'Fri': repeats['Fri'].map(x => x.id).includes(this.props.id),\n      'Sat': repeats['Sat'].map(x => x.id).includes(this.props.id),\n      'Sun': repeats['Sun'].map(x => x.id).includes(this.props.id),\n    }});\n    data.settings.repeats = repeats;\n    localStorage.setItem('data', JSON.stringify(data));\n  }\n  toggleComplete() {\n    let status = this.state.info.complete\n    if (status === 'complete') { status = '' }\n    else { status = 'complete' }\n    this.setState(prevState => ({\n      info: {...prevState.info, complete: status}})); \n    this.displayOptions('hide');\n  }\n  toggleImportant() {\n    let status = this.state.info.important\n    if (status === 'important') { status = '' }\n    else { status = 'important' }\n    this.setState(prevState => ({\n      info: {...prevState.info, important: status, maybe: ''}})); \n    this.displayOptions('hide');\n  }\n  toggleMaybe() {\n    let status = this.state.info.maybe\n    if (status === 'maybe') { status = '' }\n    else { status = 'maybe' }\n    this.setState(prevState => ({\n      info: {...prevState.info, maybe: status, important: ''}})); \n    this.displayOptions('hide');\n  }\n  toggleCollapse() {\n    let status = this.state.info.collapsed\n    if (status === 'collapsed') { status = '' }\n    else { status = 'collapsed' }\n    this.setState(prevState => ({\n      info: {...prevState.info, collapsed: status}})); \n    this.displayOptions('hide');\n  }\n  deleteThis() {\n    // TODO: remove deadline, repeat & startdate \n      // [[don't use global variable]]\n    let parent = this.props.parent;\n    while (parent.props.parent) {\n      parent = parent.props.parent;\n    }\n    this.changeEndDate('destroy');\n    this.changeStartDate('destroy');\n   for (let day of ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']) {\n      if (repeats[day].map(x => x.id).includes(this.props.id)) {\n        this.changeRepeat(day);\n        console.log(repeats);\n      }\n    }\n    const subtasks = this.state.parent.state.subtasks;\n    const currentTask = subtasks.findIndex(x => {\n      return x.id === this.state.id;\n    });\n    subtasks.splice(currentTask, 1);\n    selected = this.state.parent;\n    this.state.parent.setState({subtasks: subtasks});\n    preventSelect = true;\n    setTimeout(() => {\n      preventSelect = false\n      save(this.props.parent, 'list');\n    }, 200);\n  }\n  componentDidMount() {\n    this.changeTitle({target: {value: this.state.title}});\n    this.editBar.current.focus();\n    selectTask(this);\n    this.changeEndDate('init');\n    this.changeStartDate('init');\n    if (this.state.riverTask) {\n      this.resetRepeats();\n    }\n  }\n  render() {\n    // fuck react\n    this.displayOptions = this.displayOptions.bind(this);\n    this.toggleComplete = this.toggleComplete.bind(this);\n    this.toggleImportant = this.toggleImportant.bind(this);\n    this.toggleMaybe = this.toggleMaybe.bind(this);\n    this.deleteThis = this.deleteThis.bind(this);\n    this.resetRepeats = this.resetRepeats.bind(this);\n    this.changeRepeat = this.changeRepeat.bind(this);\n    this.taskList = React.createRef();\n    this.optionsButton = React.createRef();\n    this.editBar = React.createRef();\n    this.heightSpan = React.createRef();\n    this.startDateSpan = React.createRef();\n    const headingClass = this.state.subtasks.length > 0 ? \n      'heading' : '';\n    const hasTimes = this.state.info.startDate.length > 0 && \n      this.state.info.endDate.length > 0 ? 'event' : '';\n    const startInput = \n      <input className='optionsInput startDate' \n      value={this.state.info.startDate} \n      onChange={(ev) => this.changeStartDate(ev)}\n      ref={this.startDateSpan}></input>\n    const endInput = \n      <input className='optionsInput endDate' \n      value={this.state.info.endDate} \n      onChange={(ev) => this.changeEndDate(ev)}>\n      </input>\n    // task with info and subtasks\n    return (\n      <li \n      className={'task ' + this.state.info.important + \n        ' ' + this.state.info.complete + \n        ' ' + this.state.info.maybe + \n        ' ' + headingClass + \n        ' ' + hasTimes + \n        ' ' + this.state.info.collapsed} \n      onClick={() => {selectTask(this)}}\n      >\n        <span className='info' onClick={(ev) => this.displayOptions(ev)}\n          ref={this.optionsButton}>\n          <div className={'options ' + this.state.displayOptions}>\n            <div className='buttonBar' style={{width: '100%', \n              alignContent: 'center'}}>\n              <button \n                className={'button ' + this.state.info.complete}\n                onClick={this.toggleComplete}>\n                √</button>\n              <button \n                className={'button ' + this.state.info.important}\n                onClick={this.toggleImportant}>\n                !</button>\n              <button \n                className={'button ' + this.state.info.maybe}\n                onClick={this.toggleMaybe}>\n                ?</button>\n              <button \n                className={'button'}\n                onClick={this.deleteThis}>\n                x</button>\n              <button \n                className={'button'}\n                onClick={() => {\n                  newTask('task');\n                  this.displayOptions('hide');\n                }}>\n                +</button>\n              <button \n                className={'button'}\n                onClick={() => this.toggleCollapse()}>\n                {'[]'}</button>\n            </div>\n            {this.state.riverTask &&\n              <div className='buttonBar' style={{width: '100%', \n              alignContent: 'center'}}>\n                <button \n                  className={'button repeatButton ' + \n                  this.state.repeats['Mon']} \n                  onClick={() => this.changeRepeat('Mon')}>M</button>\n                <button \n                  className={'button repeatButton ' + \n                  this.state.repeats['Tue']} \n                  onClick={() => this.changeRepeat('Tue')}>T</button>\n                <button \n                  className={'button repeatButton ' + \n                  this.state.repeats['Wed']} \n                  onClick={() => this.changeRepeat('Wed')}>W</button>\n                <button \n                  className={'button repeatButton ' + \n                  this.state.repeats['Thu']} \n                  onClick={() => this.changeRepeat('Thu')}>R</button>\n                <button \n                  className={'button repeatButton ' + \n                  this.state.repeats['Fri']} \n                  onClick={() => this.changeRepeat('Fri')}>F</button>\n                <button \n                  className={'button repeatButton ' + \n                  this.state.repeats['Sat']} \n                  onClick={() => this.changeRepeat('Sat')}>S</button>\n                <button \n                  className={'button repeatButton ' + \n                  this.state.repeats['Sun']} \n                  onClick={() => this.changeRepeat('Sun')}>U</button>\n              </div>\n            }\n            {startInput}\n            {endInput}\n          </div>\n        </span>\n        <span className='optionsSpan startDate'>{this.state.info.startDate}</span>\n        <span className='optionsSpan endDate'>{this.state.info.endDate}</span>\n        <textarea className='editBar' value={this.state.title}\n          onChange={(ev) => this.changeTitle(ev)} ref={this.editBar}\n          style={{height: this.state.editHeight}}></textarea>\n        <span className='editBar editSpan'\n          ref={this.heightSpan} \n          style={{width: this.state.editWidth}}>\n          {this.state.title + 'x'}</span>\n        <TaskList ref={this.taskList} subtasks={this.state.subtasks} \n          parent={this} />\n      </li>\n    )\n  }\n}\n\nfunction newTask(type) {\n  // create new task after selected\n  let el;\n  if (type == 'task' || !selected.state.parent) {\n    el = selected;\n  } else if (type == 'list' || selected.state.parent) {\n    el = selected.state.parent;\n  }\n  const today = new Date();\n  const now = today.getTime();\n  const newTask = {\n    id: String(now),\n    info: {complete: '', startDate: '', endDate: ''},\n    title: '',\n    subtasks: [],\n  }\n  copiedTask = newTask;\n  pasteTask(type);\n}\n\nfunction selectTask(el, force) {\n  // make this task selected\n  if (preventSelect) return\n  if (el instanceof TaskList) {\n    return\n  }\n  preventSelect = true;\n  setTimeout(function () { preventSelect = false }, 250);\n  console.log(selected);\n  if (selected == el && !force) {\n    console.log('selected and el are the same');\n    return;\n  }\n  if (selected) {\n    save(selected, 'task');\n  }\n  if (selected instanceof Task && el != selected) {\n    selected.displayOptions({target: undefined}, 'hide');\n  }\n  selected = el;\n  if (el instanceof Task) {\n    el.editBar.current.focus();\n  }\n}\n\nfunction save(task, saveType) {\n  // save the new data\n  let parent = task.props.parent;\n  let parents = [task.props.id];\n  while (parent && parent.props.id) {\n    parents.push(parent.props.id);\n    parent = parent.props.parent;\n  }\n  parents = parents.reverse();\n  let parentObject = data[parents[0]];\n  let endIndex;\n  if (saveType === 'task') {\n    // save the TaskList which this task is in\n    endIndex = 0\n  } else if (saveType === 'list' || !saveType) {\n    // save this task's data\n    endIndex = -1\n  }\n  for (let parentId of parents.slice(1, parents.length - endIndex)) {\n    parentObject = parentObject.subtasks.find(x => x.id === parentId);\n  }\n  if (!parentObject) return;\n  parentObject.title = task.state.title;\n  parentObject.subtasks = task.state.subtasks;\n  parentObject.info = task.state.info;\n  localStorage.setItem('data', JSON.stringify(data));\n}\n\nfunction cutTask() {\n  if (!selected || selected instanceof List) return;\n  copyTask();\n  selected.deleteThis();\n}\n\nfunction copyTask() {\n  if (!selected || selected instanceof List) return;\n  const state = selected.state;\n  copiedTask = {title: state.title, id: selected.props.id, \n    info: {...state.info}, subtasks: state.subtasks.concat()};\n}\n\nfunction pasteTask(type) {\n  if (!selected) return;\n  if (selected instanceof List || type === 'task') {\n    const subtasks = selected.state.subtasks;\n    subtasks.splice(0, 0, copiedTask);\n    selected.setState({subtasks: subtasks});\n    save(selected, 'task');\n  } else if (selected instanceof Task || type === 'list') {\n    const subtasks = selected.state.parent.state.subtasks;\n    const insertIndex = subtasks.findIndex(x => x.id == selected.props.id) + 1;\n    subtasks.splice(insertIndex, 0, copiedTask);\n    selected.state.parent.setState({subtasks: subtasks});\n    save(selected, 'list');\n  }\n}\n\nfunction moveTask(direction) {\n  console.log('movetask');\n  if (!selected) return;\n  const subtasks = selected.props.parent.state.subtasks;\n  const selectedPlace = \n    selected.props.parent.state.subtasks.findIndex(x => x.id == selected.props.id);\n  const spliceTask = subtasks.splice(selectedPlace, 1)[0];\n  subtasks.splice(selectedPlace + direction, 0, spliceTask);\n  selected.props.parent.setState(subtasks);\n}\n\nfunction backup() {\n  const now = new Date();\n  // fs.writeFile('file.txt', JSON.stringify('data'), \n}\n\nfunction keyComms(ev) {\n  if (ev.ctrlKey && ev.shiftKey) {\n    switch (ev.key) {\n      case 'V':\n        pasteTask('task');\n        break;\n      case 'N':\n        newTask('task');\n        break;\n      default:\n        break;\n    }\n  } else if (ev.ctrlKey) {\n    switch (ev.key) {\n      case 'x':\n        cutTask();\n        break;\n      case 'c':\n        copyTask();\n        break;\n      case 'v':\n        pasteTask();\n        break;\n      case 'n':\n        newTask();\n        break;\n      case 'Backspace':\n        if (selected && selected instanceof Task) {\n          selected.deleteThis();\n        }\n      case 'i':\n        if (selected && selected instanceof Task) {\n          selected.displayOptions({target: $('<p></p>')});\n          if (selected.state.displayOptions === 'show') {\n            selected.startDateSpan.current.focus();\n          } else {\n            selected.editBar.current.focus();\n          }\n        };\n        break;\n      case 'u':\n        moveTask(-1);\n        break;\n      case 'd':\n        moveTask(1);\n        break;\n      default:\n        break;\n    }\n  } else if (!ev.metaKey && !ev.ctrlKey && !ev.altKey) {\n    switch (ev.key) {\n      case 'Escape':\n        ev.preventDefault();\n        document.activeElement.blur();\n        selectTask(undefined);\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {loginUsername: '', loginPassword: '', \n      newUsername: '', newPassword1: '', newPassword2: ''};\n  }\n  set(ev, setter) {\n    const obj = this.state;\n    obj[setter] = ev.target.value;\n    this.setState({obj});\n  }\n  oldUser() {\n    \n  }\n  newUser() {\n\n  }\n  render() {\n    this.loginUsername = React.createRef();\n    this.loginPassword = React.createRef();\n    this.con = mysql.createConnection({\n      host: \"localhost\",\n      user: \"joshcnd_joshua\",\n      password: \"hn%X=FbWIU]J\"\n    });\n    console.log(this.con);\n    // this.con.connect(function(err) {\n    //   if (err) throw err;\n    //   console.log(\"Connected!\");\n    // });\n    return (\n      <div>\n        <div className='title'>RIVERBANK 2.0</div>\n        <div className='login'>\n          <p>login:</p>\n          <input className='searchBar' ref={this.loginUsername} value={this.state.loginUsername} onChange={(e) => this.set(e, 'loginUsername')}\n          placeholder='username'></input>\n          <input className='searchBar' ref={this.loginPassword} value={this.state.loginPassword} onChange={(e) => this.set(e, 'loginPassword')}placeholder='password'></input>\n          <button className='button'>submit</button>\n          <p>create new user:</p>\n          <input className='searchBar' ref={this.newUsername} value={this.state.newUsername} onChange={(e) => this.set(e, 'newUsername')}\n          placeholder='new username'></input>\n          <input className='searchBar' ref={this.newPassword1} value={this.state.newPassword1} onChange={(e) => this.set(e, 'newPassword1')}\n          placeholder='new password'></input>\n          <input className='searchBar' ref={this.newPassword2} value={this.state.newPassword2} onChange={(e) => this.set(e, 'newPassword2')}\n          placeholder='new password again'></input>\n          <button className='button'>submit</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction reset() {\n  data = resetData;\n  localStorage.setItem('data', data);\n}\n\nfunction login() {\n  ReactDOM.render(<Login ref={loginItem} />, document.getElementById('root'));\n}\n\nfunction init() {\n  selected = undefined;\n  width = Math.floor(window.innerWidth / 200);\n  prevWidth = Math.floor(window.innerWidth / 200);\n  app = React.createRef();\n  ReactDOM.render(<App ref={app} />, document.getElementById('root'));\n  $(document).on('keydown', keyComms);\n}\n\nlogin();"],"sourceRoot":""}